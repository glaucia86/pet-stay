# ==============================================
# PetStay Application Environment Variables
# ==============================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env file with real credentials to git

# Shared Configuration
NODE_ENV=development

# URLs
WEB_URL=http://localhost:3000
API_URL=http://localhost:4000

# Database Configuration
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://postgres:password@localhost:5432/petstay"

# Redis Configuration
# Redis connection string for caching and session management
# Format: redis://host:port
REDIS_URL="redis://localhost:6379"

# JWT Authentication
# Secret keys for JWT token generation and validation
# IMPORTANT: Use strong, unique random strings in production
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=change-me
JWT_REFRESH_SECRET=change-me-too

# CORS Configuration
# Frontend application URL for CORS
WEB_ORIGIN=http://localhost:3000

# Stripe Configuration (for billing and subscriptions)
# Get API keys from Stripe Dashboard: https://dashboard.stripe.com/apikeys
# Test mode keys start with sk_test_ and pk_test_
# Live mode keys start with sk_live_ and pk_live_
STRIPE_PUBLIC_KEY=pk_test_your-stripe-publishable-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key

# Stripe Webhook Secret (for handling payment events)
# Get from Stripe Dashboard > Developers > Webhooks
# Create endpoint: https://yourdomain.com/api/v1/billing/webhook
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret

# AWS S3 Configuration (Optional - for photo uploads)
# Leave empty to skip S3 integration and use placeholder images
# Get credentials from AWS IAM Console: https://console.aws.amazon.com/iam/
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_REGION=us-east-1
S3_BUCKET=petstay-dev

# API Configuration
API_PORT=4000

# Logging
LOG_LEVEL=info

# Rate Limiting (requests per minute)
RATE_LIMIT_MAX=100

# Session Configuration
SESSION_DURATION_HOURS=24
REFRESH_TOKEN_DURATION_DAYS=30

# Google Maps API (Optional - for map features in frontend)
# Get from: https://console.cloud.google.com/apis/credentials
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# Analytics (Optional)
# Google Analytics Measurement ID
NEXT_PUBLIC_GA_MEASUREMENT_ID=G-XXXXXXXXXX


